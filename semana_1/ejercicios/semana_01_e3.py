# -*- coding: utf-8 -*-
"""Untitled5.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ETRg3TZjol3_2stVJi2hsfLoaBRnXExj

## Ejercicio 1:
### Suma de Números con While (2 errores)
### Objetivo:
Sumar números ingresados por el usuario hasta que se ingrese un número negativo.
### Código con errores:
"""

suma = 0
numero = 0
while numero >= 0:
    numero = input("Ingrese un número: ")
    suma = suma + numero
print("La suma es:", suma)

"""## Pistas:
- La función input() devuelve una cadena de texto.
- La variable suma es inicializada en 0, la variable numero tambien.
- La cadena de texto debe de convertirse a tipo entero antes de la suma.

##################################################################################################

## Ejercicio 02:
### Contador de Vocales con While (2 errores)
### Objetivo:
Contar el número de vocales en una palabra ingresada por el usuario.
### Código con errores:
"""

palabra = input("Ingrese una palabra: ")
contador_vocales = 0
i = 0
while i < len(palabra):
    if palabra[i] in "aeiou":
        contador_vocales + 1
    i = i + 1
print("Número de vocales:", contador_vocales)

"""## Pistas:
- El operador "+=" se utiliza para incrementar el valor de una variable.
- La función input retorna un string.
- Verifica el incremento del contador de vocales.

##################################################################################################

## Ejercicio 3:
### Factorial de un Número con While (2 errores)
### Objetivo:
Calcular el factorial de un número ingresado por el usuario.
### Código con errores:
"""

numero = input("Ingrese un número: ")
factorial = 0
i = 1
while i <= numero:
    factorial = factorial * i
    i = i + 1
print("El factorial es:", factorial)

"""### Pistas:
- El valor inicial de factorial debe ser 1.
- Convierte la variable numero a entero antes de iniciar el ciclo.
- Verifica las inicializaciones de las variables.

##################################################################################################

## Ejercicio 4:
### Serie Fibonacci con While (3 errores)
### Objetivo:
Generar los primeros n números de la serie Fibonacci.
### Código con errores:
"""

n = input("Ingrese la cantidad de números: ")
a, b = 0, 0
i = 0
while i < n:
    print(a)
    a, b = b, a + b
    i = i + 1

"""### Pistas:
- Inicializar correctamente a y b.
- Realizar la conversión de input a entero.
- Revisar asignación multiple en a,b.

##################################################################################################

## Ejercicio 5:
### Adivinar un Número con While (3 errores)
### Objetivo:
Implementar un juego de adivinar un número generado aleatoriamente.
### Código con errores:
"""

import random

numero_secreto = random.randint(1, 10)
intento = 0
intentos = 0

while intento != numero_secreto:
    intento = input("Adivine el número: ")
    intentos += 1
print(f"¡Correcto! Intentos: {intentos}")

"""### Pistas:
- La variable intento debe convertirse a entero.
- Revisa la inicialización de intentos.
- valida la logica del juego
"""